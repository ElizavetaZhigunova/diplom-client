{"ast":null,"code":"import { tuple } from './type';\n// ================== Collapse Motion ==================\nvar getCollapsedHeight = function getCollapsedHeight() {\n  return {\n    height: 0,\n    opacity: 0\n  };\n};\nvar getRealHeight = function getRealHeight(node) {\n  var scrollHeight = node.scrollHeight;\n  return {\n    height: scrollHeight,\n    opacity: 1\n  };\n};\nvar getCurrentHeight = function getCurrentHeight(node) {\n  return {\n    height: node ? node.offsetHeight : 0\n  };\n};\nvar skipOpacityTransition = function skipOpacityTransition(_, event) {\n  return (event === null || event === void 0 ? void 0 : event.deadline) === true || event.propertyName === 'height';\n};\nvar initCollapseMotion = function initCollapseMotion() {\n  var rootCls = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'ant';\n  return {\n    motionName: rootCls + \"-motion-collapse\",\n    onAppearStart: getCollapsedHeight,\n    onEnterStart: getCollapsedHeight,\n    onAppearActive: getRealHeight,\n    onEnterActive: getRealHeight,\n    onLeaveStart: getCurrentHeight,\n    onLeaveActive: getCollapsedHeight,\n    onAppearEnd: skipOpacityTransition,\n    onEnterEnd: skipOpacityTransition,\n    onLeaveEnd: skipOpacityTransition,\n    motionDeadline: 500\n  };\n};\nvar SelectPlacements = tuple('bottomLeft', 'bottomRight', 'topLeft', 'topRight');\nvar getTransitionDirection = function getTransitionDirection(placement) {\n  if (placement !== undefined && (placement === 'topLeft' || placement === 'topRight')) {\n    return \"slide-down\";\n  }\n  return \"slide-up\";\n};\nvar getTransitionName = function getTransitionName(rootPrefixCls, motion, transitionName) {\n  if (transitionName !== undefined) {\n    return transitionName;\n  }\n  return rootPrefixCls + \"-\" + motion;\n};\nexport { getTransitionName, getTransitionDirection };\nexport default initCollapseMotion;","map":{"version":3,"names":["tuple","getCollapsedHeight","height","opacity","getRealHeight","node","scrollHeight","getCurrentHeight","offsetHeight","skipOpacityTransition","_","event","deadline","propertyName","initCollapseMotion","rootCls","arguments","length","undefined","motionName","onAppearStart","onEnterStart","onAppearActive","onEnterActive","onLeaveStart","onLeaveActive","onAppearEnd","onEnterEnd","onLeaveEnd","motionDeadline","SelectPlacements","getTransitionDirection","placement","getTransitionName","rootPrefixCls","motion","transitionName"],"sources":["C:/Users/lizaz/Documents/GitHub/diplom-client/node_modules/antd/es/_util/motion.js"],"sourcesContent":["import { tuple } from './type';\n// ================== Collapse Motion ==================\nvar getCollapsedHeight = function getCollapsedHeight() {\n  return {\n    height: 0,\n    opacity: 0\n  };\n};\nvar getRealHeight = function getRealHeight(node) {\n  var scrollHeight = node.scrollHeight;\n  return {\n    height: scrollHeight,\n    opacity: 1\n  };\n};\nvar getCurrentHeight = function getCurrentHeight(node) {\n  return {\n    height: node ? node.offsetHeight : 0\n  };\n};\nvar skipOpacityTransition = function skipOpacityTransition(_, event) {\n  return (event === null || event === void 0 ? void 0 : event.deadline) === true || event.propertyName === 'height';\n};\nvar initCollapseMotion = function initCollapseMotion() {\n  var rootCls = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'ant';\n  return {\n    motionName: rootCls + \"-motion-collapse\",\n    onAppearStart: getCollapsedHeight,\n    onEnterStart: getCollapsedHeight,\n    onAppearActive: getRealHeight,\n    onEnterActive: getRealHeight,\n    onLeaveStart: getCurrentHeight,\n    onLeaveActive: getCollapsedHeight,\n    onAppearEnd: skipOpacityTransition,\n    onEnterEnd: skipOpacityTransition,\n    onLeaveEnd: skipOpacityTransition,\n    motionDeadline: 500\n  };\n};\nvar SelectPlacements = tuple('bottomLeft', 'bottomRight', 'topLeft', 'topRight');\nvar getTransitionDirection = function getTransitionDirection(placement) {\n  if (placement !== undefined && (placement === 'topLeft' || placement === 'topRight')) {\n    return \"slide-down\";\n  }\n  return \"slide-up\";\n};\nvar getTransitionName = function getTransitionName(rootPrefixCls, motion, transitionName) {\n  if (transitionName !== undefined) {\n    return transitionName;\n  }\n  return rootPrefixCls + \"-\" + motion;\n};\nexport { getTransitionName, getTransitionDirection };\nexport default initCollapseMotion;"],"mappings":"AAAA,SAASA,KAAK,QAAQ,QAAQ;AAC9B;AACA,IAAIC,kBAAkB,GAAG,SAASA,kBAAkB,GAAG;EACrD,OAAO;IACLC,MAAM,EAAE,CAAC;IACTC,OAAO,EAAE;EACX,CAAC;AACH,CAAC;AACD,IAAIC,aAAa,GAAG,SAASA,aAAa,CAACC,IAAI,EAAE;EAC/C,IAAIC,YAAY,GAAGD,IAAI,CAACC,YAAY;EACpC,OAAO;IACLJ,MAAM,EAAEI,YAAY;IACpBH,OAAO,EAAE;EACX,CAAC;AACH,CAAC;AACD,IAAII,gBAAgB,GAAG,SAASA,gBAAgB,CAACF,IAAI,EAAE;EACrD,OAAO;IACLH,MAAM,EAAEG,IAAI,GAAGA,IAAI,CAACG,YAAY,GAAG;EACrC,CAAC;AACH,CAAC;AACD,IAAIC,qBAAqB,GAAG,SAASA,qBAAqB,CAACC,CAAC,EAAEC,KAAK,EAAE;EACnE,OAAO,CAACA,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,KAAK,CAACC,QAAQ,MAAM,IAAI,IAAID,KAAK,CAACE,YAAY,KAAK,QAAQ;AACnH,CAAC;AACD,IAAIC,kBAAkB,GAAG,SAASA,kBAAkB,GAAG;EACrD,IAAIC,OAAO,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,KAAK;EACvF,OAAO;IACLG,UAAU,EAAEJ,OAAO,GAAG,kBAAkB;IACxCK,aAAa,EAAEnB,kBAAkB;IACjCoB,YAAY,EAAEpB,kBAAkB;IAChCqB,cAAc,EAAElB,aAAa;IAC7BmB,aAAa,EAAEnB,aAAa;IAC5BoB,YAAY,EAAEjB,gBAAgB;IAC9BkB,aAAa,EAAExB,kBAAkB;IACjCyB,WAAW,EAAEjB,qBAAqB;IAClCkB,UAAU,EAAElB,qBAAqB;IACjCmB,UAAU,EAAEnB,qBAAqB;IACjCoB,cAAc,EAAE;EAClB,CAAC;AACH,CAAC;AACD,IAAIC,gBAAgB,GAAG9B,KAAK,CAAC,YAAY,EAAE,aAAa,EAAE,SAAS,EAAE,UAAU,CAAC;AAChF,IAAI+B,sBAAsB,GAAG,SAASA,sBAAsB,CAACC,SAAS,EAAE;EACtE,IAAIA,SAAS,KAAKd,SAAS,KAAKc,SAAS,KAAK,SAAS,IAAIA,SAAS,KAAK,UAAU,CAAC,EAAE;IACpF,OAAO,YAAY;EACrB;EACA,OAAO,UAAU;AACnB,CAAC;AACD,IAAIC,iBAAiB,GAAG,SAASA,iBAAiB,CAACC,aAAa,EAAEC,MAAM,EAAEC,cAAc,EAAE;EACxF,IAAIA,cAAc,KAAKlB,SAAS,EAAE;IAChC,OAAOkB,cAAc;EACvB;EACA,OAAOF,aAAa,GAAG,GAAG,GAAGC,MAAM;AACrC,CAAC;AACD,SAASF,iBAAiB,EAAEF,sBAAsB;AAClD,eAAejB,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}