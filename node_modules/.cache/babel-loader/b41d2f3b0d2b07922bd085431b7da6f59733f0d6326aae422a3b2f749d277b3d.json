{"ast":null,"code":"import { TinyColor } from '@ctrl/tinycolor';\nfunction isStableColor(color) {\n  return color >= 0 && color <= 255;\n}\nfunction getAlphaColor(frontColor, backgroundColor) {\n  var _TinyColor$toRgb = new TinyColor(frontColor).toRgb(),\n    fR = _TinyColor$toRgb.r,\n    fG = _TinyColor$toRgb.g,\n    fB = _TinyColor$toRgb.b,\n    originAlpha = _TinyColor$toRgb.a;\n  if (originAlpha < 1) {\n    return frontColor;\n  }\n  var _TinyColor$toRgb2 = new TinyColor(backgroundColor).toRgb(),\n    bR = _TinyColor$toRgb2.r,\n    bG = _TinyColor$toRgb2.g,\n    bB = _TinyColor$toRgb2.b;\n  for (var fA = 0.01; fA <= 1; fA += 0.01) {\n    var r = Math.round((fR - bR * (1 - fA)) / fA);\n    var g = Math.round((fG - bG * (1 - fA)) / fA);\n    var b = Math.round((fB - bB * (1 - fA)) / fA);\n    if (isStableColor(r) && isStableColor(g) && isStableColor(b)) return new TinyColor({\n      r: r,\n      g: g,\n      b: b,\n      a: Math.round(fA * 100) / 100\n    }).toRgbString();\n  }\n  // fallback\n  /* istanbul ignore next */\n  return new TinyColor({\n    r: fR,\n    g: fG,\n    b: fB,\n    a: 1\n  }).toRgbString();\n}\nexport default getAlphaColor;","map":{"version":3,"names":["TinyColor","isStableColor","color","getAlphaColor","frontColor","backgroundColor","_TinyColor$toRgb","toRgb","fR","r","fG","g","fB","b","originAlpha","a","_TinyColor$toRgb2","bR","bG","bB","fA","Math","round","toRgbString"],"sources":["C:/Users/Liza/Documents/GitHub/diplom-client/client/node_modules/antd/es/theme/util/getAlphaColor.js"],"sourcesContent":["import { TinyColor } from '@ctrl/tinycolor';\nfunction isStableColor(color) {\n  return color >= 0 && color <= 255;\n}\nfunction getAlphaColor(frontColor, backgroundColor) {\n  var _TinyColor$toRgb = new TinyColor(frontColor).toRgb(),\n    fR = _TinyColor$toRgb.r,\n    fG = _TinyColor$toRgb.g,\n    fB = _TinyColor$toRgb.b,\n    originAlpha = _TinyColor$toRgb.a;\n  if (originAlpha < 1) {\n    return frontColor;\n  }\n  var _TinyColor$toRgb2 = new TinyColor(backgroundColor).toRgb(),\n    bR = _TinyColor$toRgb2.r,\n    bG = _TinyColor$toRgb2.g,\n    bB = _TinyColor$toRgb2.b;\n  for (var fA = 0.01; fA <= 1; fA += 0.01) {\n    var r = Math.round((fR - bR * (1 - fA)) / fA);\n    var g = Math.round((fG - bG * (1 - fA)) / fA);\n    var b = Math.round((fB - bB * (1 - fA)) / fA);\n    if (isStableColor(r) && isStableColor(g) && isStableColor(b)) return new TinyColor({\n      r: r,\n      g: g,\n      b: b,\n      a: Math.round(fA * 100) / 100\n    }).toRgbString();\n  }\n  // fallback\n  /* istanbul ignore next */\n  return new TinyColor({\n    r: fR,\n    g: fG,\n    b: fB,\n    a: 1\n  }).toRgbString();\n}\nexport default getAlphaColor;"],"mappings":"AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,aAAa,CAACC,KAAK,EAAE;EAC5B,OAAOA,KAAK,IAAI,CAAC,IAAIA,KAAK,IAAI,GAAG;AACnC;AACA,SAASC,aAAa,CAACC,UAAU,EAAEC,eAAe,EAAE;EAClD,IAAIC,gBAAgB,GAAG,IAAIN,SAAS,CAACI,UAAU,CAAC,CAACG,KAAK,EAAE;IACtDC,EAAE,GAAGF,gBAAgB,CAACG,CAAC;IACvBC,EAAE,GAAGJ,gBAAgB,CAACK,CAAC;IACvBC,EAAE,GAAGN,gBAAgB,CAACO,CAAC;IACvBC,WAAW,GAAGR,gBAAgB,CAACS,CAAC;EAClC,IAAID,WAAW,GAAG,CAAC,EAAE;IACnB,OAAOV,UAAU;EACnB;EACA,IAAIY,iBAAiB,GAAG,IAAIhB,SAAS,CAACK,eAAe,CAAC,CAACE,KAAK,EAAE;IAC5DU,EAAE,GAAGD,iBAAiB,CAACP,CAAC;IACxBS,EAAE,GAAGF,iBAAiB,CAACL,CAAC;IACxBQ,EAAE,GAAGH,iBAAiB,CAACH,CAAC;EAC1B,KAAK,IAAIO,EAAE,GAAG,IAAI,EAAEA,EAAE,IAAI,CAAC,EAAEA,EAAE,IAAI,IAAI,EAAE;IACvC,IAAIX,CAAC,GAAGY,IAAI,CAACC,KAAK,CAAC,CAACd,EAAE,GAAGS,EAAE,IAAI,CAAC,GAAGG,EAAE,CAAC,IAAIA,EAAE,CAAC;IAC7C,IAAIT,CAAC,GAAGU,IAAI,CAACC,KAAK,CAAC,CAACZ,EAAE,GAAGQ,EAAE,IAAI,CAAC,GAAGE,EAAE,CAAC,IAAIA,EAAE,CAAC;IAC7C,IAAIP,CAAC,GAAGQ,IAAI,CAACC,KAAK,CAAC,CAACV,EAAE,GAAGO,EAAE,IAAI,CAAC,GAAGC,EAAE,CAAC,IAAIA,EAAE,CAAC;IAC7C,IAAInB,aAAa,CAACQ,CAAC,CAAC,IAAIR,aAAa,CAACU,CAAC,CAAC,IAAIV,aAAa,CAACY,CAAC,CAAC,EAAE,OAAO,IAAIb,SAAS,CAAC;MACjFS,CAAC,EAAEA,CAAC;MACJE,CAAC,EAAEA,CAAC;MACJE,CAAC,EAAEA,CAAC;MACJE,CAAC,EAAEM,IAAI,CAACC,KAAK,CAACF,EAAE,GAAG,GAAG,CAAC,GAAG;IAC5B,CAAC,CAAC,CAACG,WAAW,EAAE;EAClB;EACA;EACA;EACA,OAAO,IAAIvB,SAAS,CAAC;IACnBS,CAAC,EAAED,EAAE;IACLG,CAAC,EAAED,EAAE;IACLG,CAAC,EAAED,EAAE;IACLG,CAAC,EAAE;EACL,CAAC,CAAC,CAACQ,WAAW,EAAE;AAClB;AACA,eAAepB,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}