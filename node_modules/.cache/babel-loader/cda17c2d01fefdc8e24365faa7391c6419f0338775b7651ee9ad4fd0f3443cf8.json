{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Liza\\\\Documents\\\\GitHub\\\\diplom-client\\\\client\\\\src\\\\components\\\\AddNewad\\\\body\\\\DropZone.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseStyle = {\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  padding: '20px',\n  borderWidth: 2,\n  borderRadius: 2,\n  borderColor: '#eeeeee',\n  borderStyle: 'dashed',\n  backgroundColor: '#fafafa',\n  color: '#bdbdbd',\n  transition: 'border .3s ease-in-out'\n};\nconst activeStyle = {\n  borderColor: '#2196f3'\n};\nconst acceptStyle = {\n  borderColor: '#00e676'\n};\nconst rejectStyle = {\n  borderColor: '#ff1744'\n};\nfunction DropzoneComponent(props) {\n  _s();\n  const [files, setFiles] = useState([]);\n  const onDrop = useCallback(acceptedFiles => {\n    setFiles(acceptedFiles.map(file => Object.assign(file, {\n      preview: URL.createObjectURL(file)\n    })));\n  }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject\n  } = useDropzone({\n    onDrop,\n    accept: 'image/jpeg, image/png'\n  });\n  const style = useMemo(() => ({\n    ...baseStyle,\n    ...(isDragActive ? activeStyle : {}),\n    ...(isDragAccept ? acceptStyle : {}),\n    ...(isDragReject ? rejectStyle : {})\n  }), [isDragActive, isDragReject, isDragAccept]);\n  const thumbs = files.map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: file.preview,\n      alt: file.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, file.name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this));\n\n  // clean up\n  useEffect(() => () => {\n    files.forEach(file => URL.revokeObjectURL(file.preview));\n  }, [files]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ...getRootProps({\n        style\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Drag and drop your images here.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      children: thumbs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(DropzoneComponent, \"0i+MyUQE6aJg3g1/1oCy21X/Zis=\", false, function () {\n  return [useDropzone];\n});\n_c = DropzoneComponent;\nexport default DropzoneComponent;\nvar _c;\n$RefreshReg$(_c, \"DropzoneComponent\");","map":{"version":3,"names":["React","useCallback","useEffect","useMemo","useState","useDropzone","baseStyle","display","flexDirection","alignItems","padding","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","color","transition","activeStyle","acceptStyle","rejectStyle","DropzoneComponent","props","files","setFiles","onDrop","acceptedFiles","map","file","Object","assign","preview","URL","createObjectURL","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","accept","style","thumbs","name","forEach","revokeObjectURL"],"sources":["C:/Users/Liza/Documents/GitHub/diplom-client/client/src/components/AddNewad/body/DropZone.jsx"],"sourcesContent":["import React, { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\n\r\nconst baseStyle = {\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  padding: '20px',\r\n  borderWidth: 2,\r\n  borderRadius: 2,\r\n  borderColor: '#eeeeee',\r\n  borderStyle: 'dashed',\r\n  backgroundColor: '#fafafa',\r\n  color: '#bdbdbd',\r\n  transition: 'border .3s ease-in-out'\r\n};\r\n\r\nconst activeStyle = {\r\n  borderColor: '#2196f3'\r\n};\r\n\r\nconst acceptStyle = {\r\n  borderColor: '#00e676'\r\n};\r\n\r\nconst rejectStyle = {\r\n  borderColor: '#ff1744'\r\n};\r\n\r\nfunction DropzoneComponent(props) {\r\n  const [files, setFiles] = useState([]);\r\n\r\n  const onDrop = useCallback(acceptedFiles => {\r\n    setFiles(acceptedFiles.map(file => Object.assign(file, {\r\n      preview: URL.createObjectURL(file)\r\n    })));\r\n  }, []);\r\n\r\n  const {\r\n    getRootProps,\r\n    getInputProps,\r\n    isDragActive,\r\n    isDragAccept,\r\n    isDragReject\r\n  } = useDropzone({\r\n    onDrop,\r\n    accept: 'image/jpeg, image/png'\r\n  });\r\n\r\n  const style = useMemo(() => ({\r\n    ...baseStyle,\r\n    ...(isDragActive ? activeStyle : {}),\r\n    ...(isDragAccept ? acceptStyle : {}),\r\n    ...(isDragReject ? rejectStyle : {})\r\n  }), [\r\n    isDragActive,\r\n    isDragReject,\r\n    isDragAccept\r\n  ]);\r\n\r\n  const thumbs = files.map(file => (\r\n    <div key={file.name}>\r\n      <img\r\n        src={file.preview}\r\n        alt={file.name}\r\n      />\r\n    </div>\r\n  ));\r\n\r\n  // clean up\r\n  useEffect(() => () => {\r\n    files.forEach(file => URL.revokeObjectURL(file.preview));\r\n  }, [files]);\r\n\r\n  return (\r\n    <section>\r\n      <div {...getRootProps({style})}>\r\n        <input {...getInputProps()} />\r\n        <div>Drag and drop your images here.</div>\r\n      </div>\r\n      <aside>\r\n        {thumbs}\r\n      </aside>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default DropzoneComponent;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AACxE,SAASC,WAAW,QAAQ,gBAAgB;AAAC;AAE7C,MAAMC,SAAS,GAAG;EAChBC,OAAO,EAAE,MAAM;EACfC,aAAa,EAAE,QAAQ;EACvBC,UAAU,EAAE,QAAQ;EACpBC,OAAO,EAAE,MAAM;EACfC,WAAW,EAAE,CAAC;EACdC,YAAY,EAAE,CAAC;EACfC,WAAW,EAAE,SAAS;EACtBC,WAAW,EAAE,QAAQ;EACrBC,eAAe,EAAE,SAAS;EAC1BC,KAAK,EAAE,SAAS;EAChBC,UAAU,EAAE;AACd,CAAC;AAED,MAAMC,WAAW,GAAG;EAClBL,WAAW,EAAE;AACf,CAAC;AAED,MAAMM,WAAW,GAAG;EAClBN,WAAW,EAAE;AACf,CAAC;AAED,MAAMO,WAAW,GAAG;EAClBP,WAAW,EAAE;AACf,CAAC;AAED,SAASQ,iBAAiB,CAACC,KAAK,EAAE;EAAA;EAChC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMqB,MAAM,GAAGxB,WAAW,CAACyB,aAAa,IAAI;IAC1CF,QAAQ,CAACE,aAAa,CAACC,GAAG,CAACC,IAAI,IAAIC,MAAM,CAACC,MAAM,CAACF,IAAI,EAAE;MACrDG,OAAO,EAAEC,GAAG,CAACC,eAAe,CAACL,IAAI;IACnC,CAAC,CAAC,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM;IACJM,YAAY;IACZC,aAAa;IACbC,YAAY;IACZC,YAAY;IACZC;EACF,CAAC,GAAGjC,WAAW,CAAC;IACdoB,MAAM;IACNc,MAAM,EAAE;EACV,CAAC,CAAC;EAEF,MAAMC,KAAK,GAAGrC,OAAO,CAAC,OAAO;IAC3B,GAAGG,SAAS;IACZ,IAAI8B,YAAY,GAAGlB,WAAW,GAAG,CAAC,CAAC,CAAC;IACpC,IAAImB,YAAY,GAAGlB,WAAW,GAAG,CAAC,CAAC,CAAC;IACpC,IAAImB,YAAY,GAAGlB,WAAW,GAAG,CAAC,CAAC;EACrC,CAAC,CAAC,EAAE,CACFgB,YAAY,EACZE,YAAY,EACZD,YAAY,CACb,CAAC;EAEF,MAAMI,MAAM,GAAGlB,KAAK,CAACI,GAAG,CAACC,IAAI,iBAC3B;IAAA,uBACE;MACE,GAAG,EAAEA,IAAI,CAACG,OAAQ;MAClB,GAAG,EAAEH,IAAI,CAACc;IAAK;MAAA;MAAA;MAAA;IAAA;EACf,GAJMd,IAAI,CAACc,IAAI;IAAA;IAAA;IAAA;EAAA,QAMpB,CAAC;;EAEF;EACAxC,SAAS,CAAC,MAAM,MAAM;IACpBqB,KAAK,CAACoB,OAAO,CAACf,IAAI,IAAII,GAAG,CAACY,eAAe,CAAChB,IAAI,CAACG,OAAO,CAAC,CAAC;EAC1D,CAAC,EAAE,CAACR,KAAK,CAAC,CAAC;EAEX,oBACE;IAAA,wBACE;MAAA,GAASW,YAAY,CAAC;QAACM;MAAK,CAAC,CAAC;MAAA,wBAC5B;QAAA,GAAWL,aAAa;MAAE;QAAA;QAAA;QAAA;MAAA,QAAI,eAC9B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA0C;IAAA;MAAA;MAAA;MAAA;IAAA,QACtC,eACN;MAAA,UACGM;IAAM;MAAA;MAAA;MAAA;IAAA,QACD;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAEd;AAAC,GAxDQpB,iBAAiB;EAAA,QAepBhB,WAAW;AAAA;AAAA,KAfRgB,iBAAiB;AA0D1B,eAAeA,iBAAiB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}